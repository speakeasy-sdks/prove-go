// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type VerifyResponseResponseAddress struct {
	// An overall address score that uses all the address attributes to generate the overall score; values -1 to 100. 100 indicates an exact match.
	AddressScore *int64 `json:"addressScore,omitempty"`
	// The results of the city match.
	City *bool `json:"city,omitempty"`
	// The distance value—in miles—between the address in input and the normalized address on file.
	Distance *float32 `json:"distance,omitempty"`
	// The results of the postal/zip code match.
	PostalCode *bool `json:"postalCode,omitempty"`
	// The results of the region (state abbreviation) match.
	Region *bool `json:"region,omitempty"`
	// The results of the street name match.
	Street *bool `json:"street,omitempty"`
	// A score of the address input (minus the extendedAddress); values -1 to 100. 100 indicates an exact match.
	StreetNumber *int64 `json:"streetNumber,omitempty"`
}

type VerifyResponseResponseNameEmail struct {
	// The results of the email match.
	EmailAddress *bool `json:"emailAddress,omitempty"`
}

type VerifyResponseResponseNameIdentifiers struct {
	// The results of the date of birth match.
	Dob *bool `json:"dob,omitempty"`
	// The results of the driver’s license number match.
	DriversLicenseNumber *bool `json:"driversLicenseNumber,omitempty"`
	// The results of the driver’s license state match.
	DriversLicenseState *bool `json:"driversLicenseState,omitempty"`
	// The results of the last 4 of SSN match.
	Last4 *bool `json:"last4,omitempty"`
}

type VerifyResponseResponseName struct {
	Email *VerifyResponseResponseNameEmail `json:"email,omitempty"`
	// A score of the first name match; values -1 to 100. 100 indicates.
	FirstName   *int64                                 `json:"firstName,omitempty"`
	Identifiers *VerifyResponseResponseNameIdentifiers `json:"identifiers,omitempty"`
	// A score of the last name match; values -1 to 100. 100 indicates an exact match.
	LastName *int64 `json:"lastName,omitempty"`
	// An overall name score that uses both the first and last name scores to generate the overall score. Values -1 to 100. 100 indicates an exact match.
	NameScore *int64 `json:"nameScore,omitempty"`
	// An array of indicators providing additional context about the transaction.
	ReasonCodes []string `json:"reasonCodes,omitempty"`
}

type VerifyResponseResponse struct {
	Address *VerifyResponseResponseAddress `json:"address,omitempty"`
	// The carrier related to the phone number.
	Carrier *string `json:"carrier,omitempty"`
	// The country code associated with the phone number.
	CountryCode *string `json:"countryCode,omitempty"`
	// Line type associated with the phone number. Possible values are: Mobile, Landline, FixedVoIP, NonFixedVoIP.
	LineType *string                     `json:"lineType,omitempty"`
	Name     *VerifyResponseResponseName `json:"name,omitempty"`
	// The phone number(s) associated with the individual.
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Unique transaction identifier used to identify the results of the request.
	TransactionID *string `json:"transactionId,omitempty"`
	// The results of the transaction request.
	Verified *bool `json:"verified,omitempty"`
}

// VerifyResponse - Success - details=true + identifiers submitted
type VerifyResponse struct {
	// A text string that defines the cause of the status code.
	Description *string `json:"description,omitempty"`
	// The requestId from the request, reflected back for tracking purposes.
	RequestID *string                 `json:"requestId,omitempty"`
	Response  *VerifyResponseResponse `json:"response,omitempty"`
	// The status of the request. A response of 0 indicates success. Any non-0 response is an error indication. For more information on status codes, see the Error and Status Codes section.
	Status *int64 `json:"status,omitempty"`
}
